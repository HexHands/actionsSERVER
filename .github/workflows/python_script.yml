name: Run Python Script

on:
  push:
    branches:
      - '**'
  schedule:
    - cron: '* * * * *'

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Check for signal artifact
        id: check_artifact
        run: |
          artifact=$(gh run list -w "${{ github.workflow }}" -L 1 -R "${{ github.repository }}" --json number,artifacts | jq '.runs[0].artifacts[] | select(.name=="signal") | .id')
          echo "::set-output name=artifact::$artifact"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete signal artifact if it exists
        if: steps.check_artifact.outputs.artifact != null
        run: gh artifact delete ${{ steps.check_artifact.outputs.artifact }} -R "${{ github.repository }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  run-python-script:
    needs: check
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Python script
      run: python main.py
      env:
        PASSWORD: ${{ secrets.PASSWORD }}

    - name: Create signal artifact
      run: echo "signal" > signal.txt && gh artifact upload signal signal.txt
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
